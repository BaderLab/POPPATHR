# ~[workdir]/ld/all_snps
# http://corearray.sourceforge.net/tutorials/SNPRelate/#format-conversion-from-plink-binary-files
# http://jungle.unige.ch/QTLtools_figures/figure5.R

require(SNPRelate)
library(RColorBrewer)
COL = brewer.pal(3, "Set2")

bed.fn <- "snps_unique_all.bed"
fam.fn <- "snps_unique_all.fam"
bim.fn <- "snps_unique_all.bim"

snpgdsSummary("test.gds")
snpgdsBED2GDS(bed.fn, fam.fn, bim.fn, "test.gds")

genofile <- snpgdsOpen("test.gds")

fam <- read.table(fam.fn, as.is=T)
fam[,6] <- ifelse(fam[,6] == 1, "CEU", ifelse(fam[,6] == 2, "ASW", "Other"))

pop_code <- fam[,6]

pca <- snpgdsPCA(genofile, num.thread=2)
sample.id <- read.gdsn(index.gdsn(genofile, "sample.id"))
head(cbind(sample.id, pop_code))

tab <- data.frame(sample.id = pca$sample.id,
    pop = factor(pop_code)[match(pca$sample.id, sample.id)],
    EV1 = pca$eigenvect[,1],    # the first eigenvector
    EV2 = pca$eigenvect[,2],    # the second eigenvector
    stringsAsFactors = FALSE)

others_rm <- which(tab$pop == "Other")
tab <- tab[-others_rm, ]
P <- unique(tab$pop)

png("all_pathway_genotypes.png")
plot(tab$EV2, tab$EV1, pch=19, col=COL[tab$pop],
     xlab="PC1", ylab="PC2",
     main="Principal components for all pathway genotype data")
legend("topright", legend=as.character(P), fill=COL[P])
dev.off()
