require(reshape2)
require(ggplot2)

############ asw
asw_geno <- readRDS("all.path.genos.asw.rds")
geno_melt_asw <- melt(asw_geno)
length(unique(geno_melt_asw$Var1))
#[1] 83 (ASW samples - good)

asw_pairs <- readRDS("hc.diff.pairs.sorted.asw.rds")
top_asw <- asw_pairs[1:10,]
top_asw <- top_asw[,c(1,4)]

colnames(geno_melt_asw) <- c("id", "snp_1", "geno_1")
top_geno <- merge(top_asw, geno_melt_asw, by="snp_1")
colnames(geno_melt_asw)[2:3] <- c("snp_2", "geno_2")
top_geno_asw <- merge(top_geno, geno_melt_asw, by="snp_2")

############## ceu
ceu_geno <- readRDS("all.path.genos.ceu.rds")
geno_melt_ceu <- melt(ceu_geno)
length(unique(geno_melt_ceu$Var1))
#[1] 165 (ceu samples - good)

ceu_pairs <- readRDS("hc.diff.pairs.sorted.ceu.rds")
top_ceu <- ceu_pairs[1:10,]
top_ceu <- top_ceu[,c(1,4)]

colnames(geno_melt_ceu) <- c("id", "snp_1", "geno_1")
top_geno <- merge(top_ceu, geno_melt_ceu, by="snp_1")
colnames(geno_melt_ceu)[2:3] <- c("snp_2", "geno_2")
top_geno_ceu <- merge(top_geno, geno_melt_ceu, by="snp_2")

############# high asw + low ceu (same pairs)
colnames(geno_melt_ceu) <- c("id", "snp_1", "geno_1")
bottom_geno <- merge(top_asw, geno_melt_ceu, by="snp_1")
colnames(geno_melt_ceu)[2:3] <- c("snp_2", "geno_2")
bottom_geno_ceu <- merge(bottom_geno, geno_melt_ceu, by="snp_2")

## plotting code from SP
dat <- top_geno_ceu
dat <- na.omit(dat)
dat$z <- paste(dat$geno_1, dat$geno_2, sep="_")

plotList <- list()
pdf("ceu_genos_high-ceu.pdf")
par(mfrow=c(2,3))
tryCatch({
ctr <-1
for (k in unique(dat$snp_1)) {
	for (m in unique(dat$snp_2)) {
			x <- subset(dat, snp_1 %in% k & snp_2 %in% m)
			g <- ggplot(x, aes(x=geno_1 ,y=geno_2))
		#	g  <- g + geom_bar(aes(y= ..prop..,
		#			fill=factor(..x..)),stat="count") +
		#			scale_y_continuous(labels=scales::percent)
			g <- g + geom_jitter(alpha=0.2)
			g <- g + ggtitle(sprintf("%s:%s", k, m))
			for (a in 0:2) {
				for (b in 0:2) {
					pct <- sum(x$geno_1 %in% a & x$geno_2 %in% b)

				#	if(pct == 0) next

					pct <- round(pct/nrow(x)*100)
					g <- g + annotate("text", label=sprintf("%g%%",pct),
						                x=a, y=b, colour="blue", cex=7)
				}
			}
			print(g)
			plotList[[ctr]] <- g

			y2 <- table(x$z)
			y <- as.integer(y2)/nrow(x)
			names(y) <- names(y2)

			cr <- cor(x$geno_1, x$geno_2, method="pearson")
		#	barplot(y,main=sprintf("%s:%s\n(cor=%1.2e)",k,m,cr))
			ctr <- ctr+1
	}
}
},error=function(ex){ print(ex)
},finally={
	dev.off()
})

#savehistory("asw_top_pairwise_genos.Rhistory")
